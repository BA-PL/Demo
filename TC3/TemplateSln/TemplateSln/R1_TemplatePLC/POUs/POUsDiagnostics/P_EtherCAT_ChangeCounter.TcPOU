<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4022.12">
  <POU Name="P_EtherCAT_ChangeCounter" Id="{63c50270-9d3e-48fc-b34a-3a1bed7ab1e4}" SpecialFunc="None">
    <Declaration><![CDATA[//==================================================================================================
//							Beckhoff Automation Poland
//									19.10.2018
// Program wyświetlający informację o licznikach State Changes i NOT Present - opis ponizej
// Wymagane jest podanie jedynie adresu AMS NET ID Mastera EtherCATa i liczby urzadzen Slave
// State Changes/Not Present
// State Changes - for example if the sync task needs longer then 100ms, state changes from OP to other, but Slave is present
// Not Present - If it switchs back from OP (power off, broken...)
//
//	v1.3 	|| TC v 3.1.4022.25		 	|| - Reset as an input, Presen --> Present 
//	v1.2 	|| TC v 3.1.4022.20		 	|| - Return instruction and some comments
//	v1.1 	|| TC v 3.1.4020.32		 	|| - Dodane wyjscia bOk, bWarning, bError, opisu, zmiana typow zmiennych
//	v1.0 	|| TC v 3.1.4020.32 		|| - Pierwsza wersja
//==================================================================================================
PROGRAM P_EtherCAT_ChangeCounter
VAR CONSTANT
	sAmsNetID_EtherCATMaster				: T_AmsNetId	:= '';							// EtherCAT Master AMS Net ID
	wCountOfEtherCATSlaves					: WORD 			:= 10; 							// Count of EtherCAT Slaves
END_VAR
VAR_INPUT
	bReset									: BOOL;
END_VAR
VAR_OUTPUT
	bOK										: BOOL;											// Brak bledow i ostrzezen
	bWarning								: BOOL;											// Ostrzezenie - nie wystepuja w tym podprogramie - wystepuja dla zachowania spojnosci
	bError									: BOOL;											// Zbiorcza flaga bledow
END_VAR
VAR
	//======================= State Changes/ ========================
	arrAbnormalStateChangeCounter			: ARRAY [1..wCountOfEtherCATSlaves] OF DWORD; 	// State Changes/  - tablica zawieraca dane dla poszczegilnych Slave
	wAbnormalStateChangeCounterPosition		: WORD;											// Pozycja pierwszego Slavea który zmienił wartosc licznika
	bAbnormalStateChangeCounterChanged		: BOOL;											// Flaga wystapienia zmiany licznika
	//===============================================================
	//======================== /Not Present =========================
	arrPresentStateChangeCounter			: ARRAY [1..wCountOfEtherCATSlaves] OF DWORD; 	// /Not Present  - tablica zawieraca dane dla poszczegilnych Slave
	wPresentStateChangeCounterPosition		: WORD;											// Pozycja pierwszego Slavea który zmienił wartosc licznika
	bPresentStateChangeCounterChanged		: BOOL;											// Flaga wystapienia zmiany licznika
	//===============================================================
	//======================= Internal ==============================
	bFirstCycle								: BOOL := TRUE;
	tonRefresh								: TON;
	tRefreshTime							: TIME := T#200MS;								// Refresh timer
	
	//===============================================================
	//=================== Internal hidden ===========================
	{attribute 'hide'}
	fbADSREAD_AbnormalStateChangeCounter	: ADSREAD;
	{attribute 'hide'}
	fbADSREAD_PresentStateChangeCounter		: ADSREAD;
	{attribute 'hide'}
	arrAbnormalStateChangeCounterOld		: ARRAY [1..wCountOfEtherCATSlaves] OF DWORD; 	// Stara tablica - do celow porownawczych
	{attribute 'hide'}
	arrPresenStateChangeCounterOld			: ARRAY [1..wCountOfEtherCATSlaves] OF DWORD; 	// Stara tablica - do celow porownawczych
	{attribute 'hide'}
	i										: WORD;
	{attribute 'hide'}
	ft1										: F_TRIG;
	{attribute 'hide'}
	ft2										: F_TRIG;
	//===============================================================
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[{region "Is it ready to read?"}
IF sAmsNetID_EtherCATMaster = '' OR wCountOfEtherCATSlaves = 0 THEN
	RETURN;
END_IF
{endregion}
{region "Call FBs"}
// Start reading
tonRefresh(IN:= NOT tonRefresh.Q, PT:= tRefreshTime);

// End of reading 
ft1(CLK:= fbADSREAD_PresentStateChangeCounter.BUSY);
ft2(CLK:= fbADSREAD_AbnormalStateChangeCounter.BUSY);

// Reading
fbADSREAD_PresentStateChangeCounter(
	NETID			:= sAmsNetID_EtherCATMaster,
	PORT			:= 16#FFFF,
	IDXGRP			:= 16#16,
	IDXOFFS			:= 0,
	LEN				:= SIZEOF(arrPresentStateChangeCounter),
	DESTADDR		:= ADR(arrPresentStateChangeCounter),
	READ			:= tonRefresh.Q);

fbADSREAD_AbnormalStateChangeCounter(
	NETID			:= sAmsNetID_EtherCATMaster,
	PORT			:= 16#FFFF,
	IDXGRP			:= 16#13,
	IDXOFFS			:= 0,
	LEN				:= SIZEOF(arrAbnormalStateChangeCounter),
	DESTADDR		:= ADR(arrAbnormalStateChangeCounter),
	READ			:= ft1.Q);
{endregion}
{region "Change detection"}
//================= Checks positon of change ====================
// Check if changed
IF ft1.Q THEN
	IF NOT  bFirstCycle THEN
		FOR i := 1 TO wCountOfEtherCATSlaves DO
			IF arrPresentStateChangeCounter[i] <> arrPresenStateChangeCounterOld[i] THEN
				wPresentStateChangeCounterPosition 		:= i;
				bPresentStateChangeCounterChanged 		:= TRUE;
				EXIT;
			END_IF
		END_FOR
	END_IF
	arrAbnormalStateChangeCounterOld 					:= arrAbnormalStateChangeCounter;
END_IF

IF ft2.Q THEN
	IF NOT  bFirstCycle THEN
		FOR i := 1 TO wCountOfEtherCATSlaves DO
			IF arrAbnormalStateChangeCounter[i] <> arrAbnormalStateChangeCounterOld[i] THEN
				wAbnormalStateChangeCounterPosition 	:= i;
				bAbnormalStateChangeCounterChanged 		:= TRUE;
				EXIT;
			END_IF
		END_FOR
	END_IF
	arrPresenStateChangeCounterOld 						:= arrPresentStateChangeCounter;
	bFirstCycle 										:= FALSE;
END_IF
//===============================================================
{endregion}
{region "Reset and states"}
//  Reset
IF bReset THEN
	wPresentStateChangeCounterPosition 					:= 0;
	wAbnormalStateChangeCounterPosition 				:= 0;
	bPresentStateChangeCounterChanged 					:= FALSE;
	bAbnormalStateChangeCounterChanged 					:= FALSE;
	bReset 												:= FALSE;
END_IF

// Set outputs
bError 			:= bPresentStateChangeCounterChanged OR bAbnormalStateChangeCounterChanged;
bOK 			:= NOT bError AND NOT bWarning;
{endregion}]]></ST>
    </Implementation>
    <LineIds Name="P_EtherCAT_ChangeCounter">
      <LineId Id="1574" Count="75" />
      <LineId Id="2" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>